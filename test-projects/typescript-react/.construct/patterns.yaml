# .construct/patterns.yaml
# Project-specific pattern configuration
# This file controls which patterns are active in your CLAUDE.md

# Languages used in this project
languages: []
# Active pattern plugins (from CONSTRUCT-CORE/patterns/plugins/)
plugins:
  - architectural/project-Ineedtounderstandwha
  - cross-platform/project-Ineedmoreinformation
  - frameworks/project-react
  - languages/project-typescript
  - tooling/project-Ineedtounderstandwha
  - ui/project-Basedontheprojectcon
  - performance/project-optimization
  - quality/project-Ineedtounderstandwha
# Available pattern categories (10 total):
# - architectural/ (MVVM, Clean Architecture, design patterns, coordinators)
# - cross-platform/ (shared models, API contracts, sync patterns)  
# - frameworks/ (SwiftUI, React, Flask, framework-specific patterns)
# - languages/ (Swift, Python, TypeScript conventions and modern features)
# - platforms/ (iOS, web, Android platform requirements and constraints)
# - tooling/ (build scripts, CI/CD, development workflows, testing)
# - ui/ (design tokens, visual quality, accessibility, component patterns)
# - performance/ (optimization, rendering, memory management, lazy loading)
# - quality/ (professional standards, quality gates, empirical discoveries)
# - configuration/ (platform settings, Info.plist, build config, environment)

# Project-specific rules (added to CLAUDE.md)
# Format: language -> list of rules
custom_rules: {}
# Pattern overrides (exceptions to base patterns)
# Format: pattern, exception, scope
overrides: []
# Include external pattern files (optional)
# Useful for large projects to modularize rules
includes: []
