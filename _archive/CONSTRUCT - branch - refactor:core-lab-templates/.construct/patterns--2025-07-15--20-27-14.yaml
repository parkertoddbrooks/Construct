# CONSTRUCT Framework Pattern Configuration
# This configures the patterns used by CONSTRUCT itself

# Languages used in CONSTRUCT development
languages: ["bash", "python"]

# Active pattern plugins
plugins:
  - tooling/construct-dev      # CONSTRUCT-specific development patterns
  - tooling/shell-scripting    # Shell script best practices
  - tooling/shell-quality      # Shell script quality standards
  - tooling/unix-philosophy    # Unix design principles

# Custom rules for CONSTRUCT framework
custom_rules:
  scripts:
    - "All scripts must have help output with --help"
    - "Scripts must support interactive mode detection"
    - "Use absolute paths from CONSTRUCT_CORE root"
    - "Exit codes must be meaningful (0=success, >0=errors)"
  
  structure:
    - "CORE contains stable code"
    - "LAB contains experimental code"
    - "Patterns live in patterns/plugins/"
    - "Scripts organized by category (core/, construct/, workspace/, dev/)"
  
  documentation:
    - "All scripts must have header comments"
    - "Pattern files must include examples"
    - "Validators must document what they check"

# Include configurations
includes:
  - patterns/plugins/registry.yaml    # Plugin registry

# Overrides for specific files/directories
overrides: []