# MVVM Architecture Rules for CONSTRUCT
# Configuration for validating Swift MVVM compliance

rules:
  views:
    # View layer rules - UI only
    allowed_patterns:
      - "struct.*View"
      - "@State.*isShowing"
      - "@State.*isAnimating"
      - "@State.*selectedTab"
      - ".padding(tokens."
      - ".frame(width: tokens."
      - ".font(.app"
      - "Color.app"
      - "Spacing."
      
    forbidden_patterns:
      - "@State.*User"
      - "@State.*Product"
      - "@State.*Data"
      - "@State.*Model"
      - "URLSession"
      - "NetworkManager"
      - "APIService"
      - ".fetch"
      - ".save"
      - ".delete"
      - "DispatchQueue.main"
      - ".frame(width: [0-9]"
      - ".frame(height: [0-9]"
      - ".padding([0-9]"
      - "Color(red:"
      
    error_messages:
      "@State.*User": "Business data should be @Published in ViewModel, not @State in View"
      "URLSession": "API calls belong in Services, not Views"
      ".frame(width: [0-9]": "Use design tokens instead of hardcoded values"
      "DispatchQueue.main": "Use async/await with @MainActor instead"

  viewmodels:
    # ViewModel layer rules - business logic
    required_patterns:
      - "@MainActor"
      - "ObservableObject"
      - "@Published"
      
    allowed_patterns:
      - "class.*ViewModel"
      - "@Published private(set)"
      - "async func"
      - "throws"
      - "await"
      - "Task"
      
    forbidden_patterns:
      - "DispatchQueue"
      - ".main.async"
      - "completion:"
      - "@escaping"
      
    error_messages:
      "DispatchQueue": "Use async/await with @MainActor instead of DispatchQueue"
      "completion:": "Use async throws instead of completion handlers"

  services:
    # Service layer rules - external communication
    required_patterns:
      - "protocol.*Service"
      - "async func"
      - "throws"
      
    allowed_patterns:
      - "URLSession"
      - "CoreData"
      - "CloudKit"
      - "HealthKit"
      - "UserDefaults"
      
    forbidden_patterns:
      - "@MainActor"
      - "@Published"
      - "ObservableObject"
      
    error_messages:
      "@MainActor": "Services should not be tied to MainActor"
      "@Published": "Services should not have @Published properties"

  models:
    # Model layer rules - data only
    allowed_patterns:
      - "struct.*Model"
      - "Codable"
      - "Identifiable"
      - "let "
      - "var "
      
    forbidden_patterns:
      - "func.*async"
      - "URLSession"
      - "@Published"
      - "@MainActor"
      
    error_messages:
      "func.*async": "Models should not contain async functions"
      "URLSession": "Models should not make network calls"

architecture:
  # Directory structure requirements
  required_directories:
    - "Features"
    - "Shared/Components"
    - "Shared/Models"
    - "Shared/Services"
    - "Core/DesignSystem"
    - "Tests"
    
  required_files:
    - "Core/DesignSystem/Colors.swift"
    - "Core/DesignSystem/Spacing.swift"
    - "Core/DesignSystem/Typography.swift"
    
  design_system:
    # Design token requirements
    required_tokens:
      colors:
        - "Color.primaryBackground"
        - "Color.secondaryBackground"
        - "Color.accent"
        - "Color.text"
        
      spacing:
        - "Spacing.xs"
        - "Spacing.sm" 
        - "Spacing.md"
        - "Spacing.lg"
        
      typography:
        - "Font.appBody"
        - "Font.appTitle"
        - "Font.appHeadline"

swift6:
  # Swift 6 specific requirements
  concurrency:
    required_patterns:
      - "@MainActor.*ViewModel"
      - "async func"
      - "await"
      
    forbidden_patterns:
      - "DispatchQueue.main"
      - "@escaping"
      - "completion:"
      
  sendable:
    # Sendable compliance patterns
    required_for_models: true
    required_for_services: true

accessibility:
  # Accessibility requirements
  required_patterns:
    - ".accessibilityLabel"
    - "Dynamic Type"
    
  forbidden_patterns:
    - ".font(.system(size:"
    - "fixed font sizes"
    
  error_messages:
    ".font(.system(size:": "Use Dynamic Type instead of fixed font sizes"

quality_gates:
  # Thresholds for quality checks
  max_hardcoded_values: 0
  max_mvvm_violations: 0
  min_design_token_usage: 10
  required_test_coverage: 80